//import { test, expect } from '@playwright/test';
// test("Build in assertion",async({page})=>{
//     await page.goto("https://practicetestautomation.com/practice-test-login/")
//     await expect(page).toHaveURL("https://practicetestautomation.com/practice-test-login/")
//     await expect(page).toHaveTitle("Test Login | Practice Test Automation")
//           //const put=page.locator('//input[@name="username"]')
//               //await expect(put).toBeEmpty()
//     await page.locator('//input[@name="username"]').fill('student')
//     const pwd=page.locator('//input[@id="password"]')
//     await expect(pwd).toBeEmpty()
//     await pwd.fill('Password123')
//     await page.getByRole('button',{name:'Submit'}).click()
//     //await expect(page.locator('//div[text()="Your username is invalid!"]')).toBeVisible()
                    // await expect(loctor).toHaveText("Your username is invalid!").toBeVisible()
//     await expect(page.locator('//div[@id="error"]')).toBeVisible()
//     //await expect(page).toHaveURL('https://practicetestautomation.com/logged-in-successfully/')
//     //await expect(page.locator('//p[@class="has-text-align-center"]/strong')).toHaveText('Congratulations student. You successfully logged in!')
//     //await expect(page.locator("//a[text()='Log out']")).toBeVisible()
//               //await expect(locator).toHaveText("//a[text()='Log out']").toBeVisible()
// })

// test.skip("checkBox or Radio Button",async({page})=>{
//     await page.goto("https://letcode.in/test")
//     await expect(page).toHaveURL('https://letcode.in/test')
//     await page.locator('//a[text()=" Toggle "]').click()
//     await page.waitForTimeout(3000)
//     await expect(page.locator("//h1[text()='Radio & Checkbox']")).toBeVisible()
//     await page.locator('//input[@id="yes"]').check()
//     await expect(page.locator('//input[@id="yes"]')).toBeChecked()
//     //await expect(page.locator('//input[@id="No"]')).not.toBeChecked()
//     await page.locator('//input[@id="one"]').check()
//     await expect(page.locator('//input[@id="one"]')).toBeChecked()
//     await page.locator('//input[@id="two"]').uncheck()
//     await expect(page.locator('//input[@id="two"]')).not.toBeChecked()
//     //await page.pause()
//     await page.locator('//input[@id="nobug"]').check()
//     await expect(page.locator('//input[@id="nobug"]')).toBeChecked()
//     await page.locator('//input[@id="bug"]').check()
//     //await expect(page.locator('//input[@id="bug"]')).not.toBeChecked()
//     await page.locator('//input[@id="foo"]').check()
//     await expect(page.locator('//input[@id="foo"]')).toBeChecked()
//     await page.waitForTimeout(2000)
//     await page.locator('//input[@id="notfoo"]').uncheck()
//     await expect(page.locator('//input[@id="notfoo"]')).not.toBeChecked()
//     await expect(page.locator('//input[@id="maybe"]/parent::label[@class="radio"]')).toBeDisabled()
//     //await page.locator('//input[@type="checkbox"]').check()
//     //await expect(page.locator('//input[@type="checkbox"]')).toBeChecked()
//     await page.locator('//label[@for="name" ]/preceding::input[@type="checkbox"]').check()
//     await expect(page.locator('//label[@for="name" ]/preceding::input[@type="checkbox"]')).toBeChecked()
//     await page.locator('//label[text()="Accept the T&C"]/following::input[@type="checkbox"]').check()
//     await expect(page.locator('//label[text()="Accept the T&C"]/following::input[@type="checkbox"]')).toBeChecked()
//     await page.waitForTimeout(3000)
// })
import {test , expect} from '@playwright/test'
test('dropdown',async({page})=>{
    await page.goto('https://letcode.in/test')
    await page.locator('//a[@href="/dropdowns"]').click()
    await page.locator('//select[@id="fruits"]').selectOption('Apple')
    await page.locator('//select[@id="superheros"]').selectOption(['Ant-Man','Batman','Captain America'])
    const cnt=await page.locator('//select[@id="lang"]/option').count()
    console.log(cnt)
    const print=page.locator('//select[@id="lang"]').textContent()
    console.log(print)
    await page.locator('//select[@id="lang"]').selectOption({value:"sharp"})
    await page.pause()
    await page.locator('//select[@id="country"]').selectOption({value:"India"})
    const sel=page.locator('//option[@value="India"]')
    console.log(sel.textContent())
})

test.describe.skip('group1',async()=>{
    //test('MainTask',async({page})=>{ 
    //test('test1',()=>{
    test('alert Task',async({page})=>{
        await page.goto("https://demo.automationtesting.in/Alerts.html")
    page.on('dialog',async dialog=>{
        console.log(dialog.type())
        console.log(dialog.message())
        expect(dialog.message('I am an alert box!'))
       await dialog.accept() 
    })
    await page.locator('//a[@href="#OKTab"]').click()
    await page.click('//button[@class="btn btn-danger"]')
    await page.waitForTimeout(5000) 
})
    //test('test2',()=>{
    test('alert with cancel or Ok',async({page})=>{
    await page.goto("https://demo.automationtesting.in/Alerts.html")
    page.on('dialog',async dialog=>{
        console.log(dialog.type())
        console.log(dialog.message())
        expect(dialog.message('Press a Button !'))
       await dialog.accept()
    })
    await page.locator('//a[@href="#CancelTab"]').click()
    await page.click('//button[@class="btn btn-primary"]')
    await expect(page.locator('//p[@id="demo"]')).toHaveText('You pressed Ok')
    await page.waitForTimeout(4000)
})
    //test('test3',()=>{
    test('alert with text box',async({page})=>{
  await page.goto("https://demo.automationtesting.in/Alerts.html")
    page.on('dialog',async dialog=>{
        console.log(dialog.type())
        console.log(dialog.message())
        //expect(dialog.message())
       await dialog.accept('Automation Testing user') 
    })
    await page.locator('//a[@href="#Textbox"]').click()
    await page.click('//button[@class="btn btn-info"]')
    await expect(page.locator('//p[@id="demo1"]')).toHaveText('Hello Automation Testing user How are you today')
    await page.waitForTimeout(3000) }) 
})

test.only('Iframe',async({page})=>{
  await page.goto("https://letcode.in/frame")
  const frame=await page.frames()
  console.log("frame count :",await frame.length)
  //for(let URL of frame)
   // console.log("frame Url :",await URL.url())
const frame1=await page.frame({name:"firstFr"})
await frame1.locator('//input[@placeholder="Enter name"]').fill("Username")
await frame1.locator('//label[text()="Last Name"]/following::input[@placeholder="Enter email"]').fill("mail@gmail.com")
const frame2=await page.frame({url:"https://letcode.in/innerframe"})
await frame2.locator('//label[text()="Email"]/following::input[@placeholder="Enter email"]').fill("example@gmail.com")
})
